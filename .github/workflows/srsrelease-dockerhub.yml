name: SRS Release to DockerHub

on:
  repository_dispatch:
    types: [srsrelease]
  workflow_dispatch:
    inputs:
      srs_tag:
        description: 'SRS Version tag (optional, defaults to latest SRS Release)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Normalize inputs (srs_tag)
        id: normalize
        run: |
          # Normalize srs_tag
          if [ -n "${{ github.event.inputs.srs_tag }}" ]; then
            echo "srs_tag=${{ github.event.inputs.srs_tag }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.client_payload.srs_tag }}" ]; then
            echo "srs_tag=${{ github.event.client_payload.srs_tag }}" >> $GITHUB_OUTPUT
          else
            echo "srs_tag=" >> $GITHUB_OUTPUT
          fi

      - name: Get SRS release tag
        id: get_srs_tag
        run: |
          if [ -z "${{ steps.normalize.outputs.srs_tag }}" ]; then
            # Get the most recent release (including pre-releases)
            TAG=$(curl -s https://api.github.com/repos/ciribob/DCS-SimpleRadioStandalone/releases | jq -r '.[0].tag_name')
          else
            TAG="${{ steps.normalize.outputs.srs_tag }}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Download SRS release binary
        run: |
          TAG="${{ steps.get_srs_tag.outputs.tag }}"
          URL="https://github.com/ciribob/DCS-SimpleRadioStandalone/releases/download/${TAG}/SRS-Server-Commandline"
          mkdir -p install-build/ServerCommandLine-Linux
          curl -L "$URL" -o install-build/ServerCommandLine-Linux/SRS-Server-Commandline
          chmod +x install-build/ServerCommandLine-Linux/SRS-Server-Commandline

      - name: Set Docker tags
        id: set_tags
        run: |
          TAG="${{ steps.get_srs_tag.outputs.tag }}"
          TAGS="${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:srs-${TAG}"
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.set_tags.outputs.tags }}