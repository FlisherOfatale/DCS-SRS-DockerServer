name: Build Linux Binary, Container Image and Push to Docker Hub

on:
  workflow_dispatch:
    inputs:
      tag_latest:
        description: 'Also tag as latest on DockerHub?'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout DCS-SimpleRadioStandalone repository
        uses: actions/checkout@v4
        with:
          repository: ciribob/DCS-SimpleRadioStandalone
          ref: master # or specify a branch/tag/commit if needed
          path: external-repo # this is the directory where it will be checked out

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build .NET Server (Linux)
        run: | 
          chmod +x ./build.sh
          ./build.sh
        shell: bash

      - name: Get external-repo commit SHA
        id: srs_sha
        run: |
          echo "sha=$(git -C external-repo rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set Docker tags
        id: set_tags
        run: |
          DATE=$(date +%Y%m%d)
          SHA="${{ steps.srs_sha.outputs.sha }}"
          TAGS="${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:${DATE}-${SHA}"
          if [[ "${{ github.event.inputs.tag_latest }}" == "true" ]]; then
            TAGS="$TAGS,${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.set_tags.outputs.tags }}