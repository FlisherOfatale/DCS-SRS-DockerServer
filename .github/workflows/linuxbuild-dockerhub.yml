name: Build to DockerHub

on:
  repository_dispatch:
    types: [linuxbuild]
  workflow_dispatch:
    inputs:
      tag_latest:
        description: 'Also tag as latest on DockerHub?'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      srs_tag:
        description: 'Optional: SRS release tag to build from (e.g. 2.2.0.2)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Normalize inputs (srs_tag and tag_latest)
        id: normalize
        run: |
          # Normalize srs_tag
          if [ -n "${{ github.event.inputs.srs_tag }}" ]; then
            echo "srs_tag=${{ github.event.inputs.srs_tag }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.client_payload.srs_tag }}" ]; then
            echo "srs_tag=${{ github.event.client_payload.srs_tag }}" >> $GITHUB_OUTPUT
          else
            echo "srs_tag=" >> $GITHUB_OUTPUT
          fi
          # Normalize tag_latest
          if [ -n "${{ github.event.inputs.tag_latest }}" ]; then
            echo "tag_latest=${{ github.event.inputs.tag_latest }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.client_payload.tag_latest }}" ]; then
            echo "tag_latest=${{ github.event.client_payload.tag_latest }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "tag_latest=true" >> $GITHUB_OUTPUT
          else
            echo "tag_latest=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get SRS commit SHA (if srs_tag is set)
        id: srs_commit
        if: ${{ steps.normalize.outputs.srs_tag != '' }}
        run: |
          TAG="${{ steps.normalize.outputs.srs_tag }}"
          SHA=$(curl -s https://api.github.com/repos/ciribob/DCS-SimpleRadioStandalone/git/refs/tags/$TAG | jq -r '.object.sha')
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Checkout DCS-SimpleRadioStandalone repository
        uses: actions/checkout@v4
        with:
          repository: ciribob/DCS-SimpleRadioStandalone
          ref: ${{ steps.normalize.outputs.srs_tag != '' && steps.normalize.outputs.srs_tag || 'master' }}
          path: external-repo

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build .NET Server (Linux)
        run: |
          chmod +x ./build.sh
          ./build.sh
        shell: bash

      - name: Get external-repo commit SHA
        id: srs_sha
        run: |
          echo "sha=$(git -C external-repo rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set Docker tags
        id: set_tags
        run: |
          if [ -n "${{ steps.normalize.outputs.srs_tag }}" ]; then
            TAGS="${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:compiled-${{ steps.normalize.outputs.srs_tag }}"
          else
            DATE=$(date +%Y%m%d)
            SHA="${{ steps.srs_sha.outputs.sha }}"
            TAGS="${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:${DATE}-${SHA}"
          fi
          if [[ "${{ steps.normalize.outputs.tag_latest }}" == "true" ]]; then
            TAGS="$TAGS,${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.set_tags.outputs.tags }}